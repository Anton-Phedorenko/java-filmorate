drop table users CASCADE;
drop table friends;
drop table status_friendship CASCADE;
drop table film_user;
drop table film_genre;
drop table motion_picture_association CASCADE;
drop table film CASCADE;
drop table genre;
CREATE TABLE IF NOT EXISTS users
(
    user_id  integer generated by DEFAULT as IDENTITY primary key,
    email    varchar NOT NULL,
    login    varchar NOT NULL,
    name     varchar,
    birthday date check (birthday <= CURDATE())
);
create table if not exists status_friendship
(
    status_id   int generated by default as identity primary key,
    status_name varchar(45)
);
create table if not exists friends
(
    first_user_id  int references users (user_id),
    second_user_id int references users (user_id),
    status_id      int references status_friendship (status_id)
);
create table if not exists motion_picture_association
(
    mpa_id   int generated by default as IDENTITY PRIMARY KEY,
    mpa_name varchar
);
create table if not exists film
(
    film_id      int generated by default as IDENTITY PRIMARY KEY,
    title        varchar(100) NOT NULL,
    description  varchar(200) NOT NULL,
    release_date date check (release_date > cast('1885-12-28' as date)),
    duration     int check (duration > 0),
    rating_MPA   int references motion_picture_association (mpa_id),
    rate         int default 0
);
create table IF NOT EXISTS film_user
(
    film_id int references film (film_id),
    user_id int references users (user_id)
);
create table if not exists genre
(
    genre_id   int generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar
);
create table if not exists film_genre
(
    film_id  int  references film (film_id),
    genre_id int references genre (genre_id),
    PRIMARY KEY (film_id, genre_id)
);